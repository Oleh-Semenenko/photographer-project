import { writeFileSync, readdirSync } from 'fs'
import { join as pathJoin } from 'path'
import { inspect as utilInspect } from 'util'
import { camelCase } from 'change-case'

export function buildIcons (rootDir: string) {
  const iconsPath = pathJoin(rootDir, 'assets/icons')
  try {
    const icons = readdirSync(iconsPath)
      .reduce((acc, cur) => {
        const fileName = cur.split('.').slice(0, -1).join('')
        acc[camelCase(fileName)] = fileName
        return acc
      }, {})

    writeFileSync(
      pathJoin(__dirname, './icons.plugin.ts'),
      String('// THIS FILE IS AUTOMATICALLY GENERATED\n')
        .concat('// DON\'T CHANGE IT IN ORDER TO MAKE IT PROPERLY WORK!\n')
        .concat(`export default defineNuxtPlugin(() => (${utilInspect({
          provide: {
            icons
          }
        })}))`)
        .concat('\n')
    )

    console.info('Building icons')
  } catch {
    console.warn(`No such file or directory, ${iconsPath}`)
  }
}
